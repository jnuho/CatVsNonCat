---
- hosts: k8s-master
  # disable storing environment information in variables before it begins running tasks.
  gather_facts: false

  vars:
    #ansible_python_interpreter: '{{ ansible_playbook_python }}'
    project_name: CatVsNonCat
    images:
      - name: fe-nginx
        tag: latest
        dockerfile: dockerfiles/Dockerfile-nginx
      - name: be-go
        tag: latest
        dockerfile: dockerfiles/Dockerfile-go
      - name: be-py
        tag: latest
        dockerfile: dockerfiles/Dockerfile-py


  # will always run prior to tasks
  pre_tasks:
    - name: Check Minikube's status.
      command: minikube status
      register: minikube_status
      changed_when: false
      ignore_errors: true

    - name: Start Minikube if it's not running.
      command: minikube start --kubernetes-version=v1.30.3 --driver=docker --cpus 4 --memory 4g
      when: "not minikube_status.stdout or 'Running' not in minikube_status.stdout"

  tasks:
    # Build the fe-nginx Docker image inside Minikube's environment
    #- name: Get existing image hash.
      #shell: |
        ##eval $(minikube docker-env)
        #docker images -q '{{ image_name }}:{{ image_tag }}'
      #register: image_hash
      #changed_when: false
    #- name: Print image hash
      #debug:
        #msg: "Image hash: {{ image_hash.stdout }}"

    - name: Register current directory variable
      command: pwd
      register: current_directory
    #- name: Print current directory
      #debug:
        #msg: "Current directory is: {{ current_directory.stdout }}"

    - name: Build image if it's not already built.
      docker_image:
        build:
          path: '{{ current_directory.stdout }}/{{ project_name }}'
          dockerfile: '{{ item.dockerfile }}'
          pull: false
        name: '{{ item.name }}'
        tag: '{{ item.tag }}'
        source: build
      with_items: "{{ images }}"

    #- name: Verify be-go is responding.
        #uri:
          #url: http://localhost:8080/healthz
          #return_content: true
        #register: be_go_response
        #failed_when: "'/healthz' not in be_go_response.content"

    #- name: Build image if it's not already built.
      #shell: |
        #eval $(minikube docker-env)
        #cd CatVsNonCat/ansible/fe-nginx-automation
        #docker build -t {{ image_name }} -f dockerfile/Dockerfile .
      #when: not image_hash.stdout

    #- name: Helm install
      #shell: |
        #cd CatVsNonCat/script
        #./3.helm-install.sh
      

