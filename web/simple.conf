log_format custom_format '$remote_addr - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent"';

server {
    # IPv4 address
    listen       80;
    # IPv6 address
    listen  [::]:80;
    # sets the server name to localhost which Nginx will respond to requests that are made to this server name.
    server_name  localhost;

    # records all requests processed by the server.
    # By default, the access log is located at logs/access.log
    # The log format can be customized to include specific details about each request
    # here the log format follows default 'main' which is defined in nginx.conf (automatically generated)
    access_log  /var/log/nginx/access.log custom_format;

    # records information about encountered issues of different severity levels
    # By default, the error log is located at logs/error.log
    # available log levels are:
    #   debug, info, notice, warn, error, crit, alert, or emerg
    #   'info' in production
    #   'debug' in development
    # error_log /var/log/nginx/error.log info;
    error_log /var/log/nginx/error.log debug;

    # static files to serve
    location / {
        #root   /usr/local/openresty/nginx/html;
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /settings.ini {
        root /config;
    }

    #location /lua {
    #    content_by_lua_block {
    #        -- Your custom Lua logic here
    #        -- Then serve index.html
    #        -- ngx.exec("/")
    #    }
    #}

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    # show the /50x.html page whenever a 500, 502, 503, or 504 error occurs
    error_page   500 502 503 504  /50x.html;
    # tells Nginx where to find the /50x.html file in the filesystem.
    location = /50x.html {
        root   /usr/share/nginx/html;
        #root   /usr/local/openresty/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

